name: Deploy Portfolio

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  validate-and-deploy:
    # This job runs on Ubuntu latest version for optimal compatibility
    runs-on: ubuntu-latest
    
    # Only execute when triggered from a branch (not tag or direct commit)
    # This prevents deployment issues on non-branch events
    if: github.ref_type == 'branch'
    
    # GitHub token permissions required for:
    # - contents:write -> Modify repository contents
    # - pull-requests:write -> Create and manage PRs
    permissions:
      contents: write
      pull-requests: write

    steps:
      # Step 1: Get the latest code from repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2a: HTML Validation
      # Uses tidy to check HTML syntax and formatting
      - name: Validate HTML
        run: |
          sudo apt-get install tidy
          tidy -q -e **/*.html || true

      # Step 2b: CSS Validation
      # Uses stylelint to validate all CSS files in repository
      - name: Validate CSS
        run: |
          for file in $(find . -name "*.css"); do
            npx stylelint $file || true
          done

      # Step 3a: Create automated PR for deployment
      # Uses peter-evans/create-pull-request action to create PR with changes
      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: deploy-changes
          base: main
          title: Deploy updates
          body: "This PR contains the latest updates for deployment."
          commit-message: "Deploy updates ðŸš€"

      # Step 3b: Automatically approve the created PR
      # Required for automated deployment process
      - name: Auto-approve PR
        if: steps.create-pr.outputs.pull-request-number
        uses: hmarr/auto-approve-action@v3
        with:
          pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Step 3c: Enable and trigger auto-merge
      # Uses GitHub CLI to enable auto-merge on the PR
      - name: Enable Auto-merge
        if: steps.create-pr.outputs.pull-request-number
        run: |
          gh pr merge --auto --merge "${{ steps.create-pr.outputs.pull-request-number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}